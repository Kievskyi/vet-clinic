spring:
  cache:
    type: redis
  data:
    redis:
      host: localhost
      port: 6379
  config:
    import: optional:file:.env[.properties]
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_SECRET}
            client-authentication-method: client_secret_post
            redirect-uri: http://localhost:8080/login/oauth2/code/google
            scope:
              - openid
              - email
              - profile
        provider:
          google:
            authorization-uri: https://accounts.google.com/o/oauth2/auth
            token-uri: https://oauth2.googleapis.com/token
            user-info-uri: https://openidconnect.googleapis.com/v1/userinfo
            user-name-attribute: sub
            jwk-set-uri: https://www.googleapis.com/oauth2/v3/certs
  datasource:
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    url: jdbc:mysql://localhost:3306/vet-clinic
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: on
  flyway:
    enabled: true
    baselineOnMigrate: true
    validateOnMigrate: true
    locations: classpath:db/migration
    url: jdbc:mysql://localhost:3306/vet-clinic
    user: root
    password: root
    baseline-version: 0
logging:
  level:
    org.springframework.security: DEBUG
    root: info
jwt:
  secret: ${JWT_SECRET}
  expiration: 86400
stripe:
  api_key: ${STRIPE_API_KEY}
domain:
  front.end: http://localhost:5173/account
mailjet:
  api_key: ${MAILJET_API_KEY}
  api_secret: ${MAILJET_API_SECRET}